program = "program" declaration_section "begin" command_section "end" .

declaration_section = { ( 
                        ( "macro" "id" "number" ) | 
                        ( "id" [ "[" numeric_expression "]" ] ) | 
                        ( "define" "id" "(" [ ( "id" [ "[" "]" ] ) 
                            { "," ( "id" [ "[" "]" ] ) } ] ")" 
                            procedure ) ";" ) } .

procedure = "procedure" declaration_section "begin" command_section 
                "return" numeric_expression ";" "end"

command_section = { assignment | procedure_call | loop | condition | io } .

assignment = "id" [ "[" numeric_expression "]" ] "=" numeric_expression ";" .

procedure_call = "id" [ "[" numeric_expression "]" ] "="  
                    "call" "id" "(" [ numeric_expression 
                    {"," numeric_expression } ] ")" ";" .

condition = "if" "(" boolean_expression ")" "{" command_section "}" 
                [ "else" "{" command_section "}" ] .

io = "input" | "output" "id" [ "[" numeric_expression "]" ] ";" .

loop = "while" boolean_expression "{" command_section "}" .

numeric_expression = ( "-" numeric_expression ) | 
                    ( "(" numeric_expression ")" ) | 
                    ( ( "id" [ "[" numeric_expression "]" ] 
                    [ ( "+" | "-" | "*" | "/" | "^" ) numeric_expression ] ) | 
                    "number" [ ( "+" | "-" | "*" | "/" | "^" )
                         numeric_expression ] ) .

boolean_expression = "true" | "false" | ( numeric_expression 
                ( ">" | "<" | "==" | "!=" | ">=" | "<=" ) numeric_expression ) .
